Terminals unused in grammar

    DOT


State 53 conflicts: 21 shift/reduce
State 168 conflicts: 1 shift/reduce


Grammar

    0 $accept: s $end

    1 s: main_func
    2  | functional_declaration s

    3 functional_declaration: func_type func_declarator compound_statement

    4 var_type: INT
    5         | CHAR
    6         | FLOAT

    7 func_type: var_type
    8          | VOID

    9 func_declarator: IDENTIFIER LEFT_ROUND RIGHT_ROUND
   10                | IDENTIFIER LEFT_ROUND param_list RIGHT_ROUND

   11 param_list: declare_var
   12           | declare_var COMMA param_list

   13 declare_var: var_type IDENTIFIER

   14 main_func: MAIN_FUNCTION LEFT_ROUND RIGHT_ROUND compound_statement
   15          | INT MAIN_FUNCTION LEFT_ROUND RIGHT_ROUND compound_statement
   16          | VOID MAIN_FUNCTION LEFT_ROUND RIGHT_ROUND compound_statement

   17 compound_statement: LEFT_CURLY RIGHT_CURLY
   18                   | LEFT_CURLY statement_list RIGHT_CURLY

   19 statement_list: single_statement
   20               | single_statement statement_list

   21 single_statement: switch_statment
   22                 | expr
   23                 | if_statement
   24                 | print_statement
   25                 | scanf_statement
   26                 | for_statement
   27                 | return_statement
   28                 | while_statement
   29                 | jump_statement
   30                 | declaration
   31                 | compound_statement

   32 jump_statement: BREAK SEMICOLON
   33               | CONTINUE SEMICOLON

   34 return_statement: RETURN expr

   35 expr: SEMICOLON
   36     | expression_statement SEMICOLON
   37     | expr COMMA expr SEMICOLON

   38 expression_statement: expression_statement OR_OP expression_statement
   39                     | expression_statement AND_OP expression_statement
   40                     | expression_statement GT_OP expression_statement
   41                     | expression_statement LT_OP expression_statement
   42                     | expression_statement GE_OP expression_statement
   43                     | expression_statement LE_OP expression_statement
   44                     | expression_statement PLUS expression_statement
   45                     | expression_statement HYPHEN expression_statement
   46                     | expression_statement STAR expression_statement
   47                     | expression_statement SLASH expression_statement
   48                     | expression_statement PERCENT expression_statement
   49                     | expression_statement EQ_OP expression_statement
   50                     | expression_statement NE_OP expression_statement
   51                     | unary_expr
   52                     | assignment_statement
   53                     | functional_call
   54                     | LEFT_ROUND expression_statement RIGHT_ROUND
   55                     | I_CONSTANT
   56                     | F_CONSTANT
   57                     | STRING_LITERAL
   58                     | arr_element
   59                     | IDENTIFIER

   60 unary_expr: EXCLAMATION expression_statement
   61           | HYPHEN expression_statement

   62 functional_call: IDENTIFIER LEFT_ROUND RIGHT_ROUND
   63                | IDENTIFIER LEFT_ROUND arg_list RIGHT_ROUND

   64 arg_list: arg
   65         | arg COMMA arg_list

   66 arg: F_CONSTANT
   67    | I_CONSTANT
   68    | IDENTIFIER
   69    | STRING_LITERAL

   70 arr_element: IDENTIFIER LEFT_SQUARE I_CONSTANT RIGHT_SQUARE
   71            | IDENTIFIER LEFT_SQUARE I_CONSTANT RIGHT_SQUARE LEFT_SQUARE I_CONSTANT RIGHT_SQUARE

   72 assignment_statement: IDENTIFIER EQUAL_SIGN expression_statement
   73                     | arr_element EQUAL_SIGN expression_statement

   74 switch_statment: SWITCH LEFT_ROUND expression_statement RIGHT_ROUND LEFT_CURLY case_list_def RIGHT_CURLY

   75 case_list_def: case_list
   76              | case_list default_stmt
   77              | %empty

   78 case_list: case
   79          | case_list case

   80 case: CASE expression_statement COLON statement_list
   81     | CASE expression_statement COLON

   82 default_stmt: DEFAULT COLON statement_list
   83             | DEFAULT COLON

   84 if_statement: IF LEFT_ROUND expression_statement RIGHT_ROUND single_statement else_clause

   85 else_clause: ELSE single_statement
   86            | %empty

   87 for_loop_assignment: assignment_statement
   88                    | assignment_statement COMMA for_loop_assignment
   89                    | %empty

   90 for_loop_declaration: declaration
   91                     | SEMICOLON

   92 for_statement: FOR LEFT_ROUND for_loop_declaration expr for_loop_assignment RIGHT_ROUND statement_list

   93 declaration: var_type init_declarator_list SEMICOLON

   94 init_declarator_list: init_declarator_list COMMA init_declarator
   95                     | init_declarator

   96 init_declarator: declarator_var EQUAL_SIGN expression_statement
   97                | declarator_var
   98                | declarator_arr

   99 declarator_var: IDENTIFIER

  100 declarator_arr: IDENTIFIER LEFT_SQUARE expression_statement RIGHT_SQUARE
  101               | IDENTIFIER LEFT_SQUARE expression_statement RIGHT_SQUARE LEFT_SQUARE expression_statement RIGHT_SQUARE

  102 while_statement: WHILE LEFT_ROUND expression_statement RIGHT_ROUND statement_list

  103 print_statement: PRINTF_TOKEN LEFT_ROUND STRING_LITERAL RIGHT_ROUND SEMICOLON
  104                | PRINTF_TOKEN LEFT_ROUND STRING_LITERAL COMMA print_params RIGHT_ROUND SEMICOLON

  105 print_params: IDENTIFIER
  106             | IDENTIFIER COMMA print_params

  107 scanf_statement: SCANF_TOKEN LEFT_ROUND STRING_LITERAL COMMA addr_list RIGHT_ROUND SEMICOLON

  108 addr_list: addr
  109          | addr COMMA addr_list

  110 addr: AMPERSAND IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    BREAK (258) 32
    CASE (259) 80 81
    CHAR (260) 5
    CONTINUE (261) 33
    DEFAULT (262) 82 83
    ELSE (263) 85
    FLOAT (264) 6
    FOR (265) 92
    IF (266) 84
    RETURN (267) 34
    INT (268) 4 15
    SWITCH (269) 74
    VOID (270) 8 16
    WHILE (271) 102
    MAIN_FUNCTION (272) 14 15 16
    IDENTIFIER (273) 9 10 13 59 62 63 68 70 71 72 99 100 101 105 106 110
    I_CONSTANT (274) 55 67 70 71
    F_CONSTANT (275) 56 66
    STRING_LITERAL (276) 57 69 103 104 107
    AND_OP (277) 39
    OR_OP (278) 38
    LE_OP (279) 43
    GE_OP (280) 42
    EQ_OP (281) 49
    NE_OP (282) 50
    EQUAL_SIGN (283) 72 73 96
    SEMICOLON (284) 32 33 35 36 37 91 93 103 104 107
    LEFT_CURLY (285) 17 18 74
    RIGHT_CURLY (286) 17 18 74
    COMMA (287) 12 37 65 88 94 104 106 107 109
    COLON (288) 80 81 82 83
    LEFT_ROUND (289) 9 10 14 15 16 54 62 63 74 84 92 102 103 104 107
    RIGHT_ROUND (290) 9 10 14 15 16 54 62 63 74 84 92 102 103 104 107
    LEFT_SQUARE (291) 70 71 100 101
    RIGHT_SQUARE (292) 70 71 100 101
    DOT (293)
    AMPERSAND (294) 110
    EXCLAMATION (295) 60
    HYPHEN (296) 45 61
    PLUS (297) 44
    STAR (298) 46
    SLASH (299) 47
    LT_OP (300) 41
    GT_OP (301) 40
    PERCENT (302) 48
    PRINTF_TOKEN (303) 103 104
    SCANF_TOKEN (304) 107


Nonterminals, with rules where they appear

    $accept (50)
        on left: 0
    s (51)
        on left: 1 2
        on right: 0 2
    functional_declaration (52)
        on left: 3
        on right: 2
    var_type (53)
        on left: 4 5 6
        on right: 7 13 93
    func_type (54)
        on left: 7 8
        on right: 3
    func_declarator (55)
        on left: 9 10
        on right: 3
    param_list (56)
        on left: 11 12
        on right: 10 12
    declare_var (57)
        on left: 13
        on right: 11 12
    main_func (58)
        on left: 14 15 16
        on right: 1
    compound_statement (59)
        on left: 17 18
        on right: 3 14 15 16 31
    statement_list (60)
        on left: 19 20
        on right: 18 20 80 82 92 102
    single_statement (61)
        on left: 21 22 23 24 25 26 27 28 29 30 31
        on right: 19 20 84 85
    jump_statement (62)
        on left: 32 33
        on right: 29
    return_statement (63)
        on left: 34
        on right: 27
    expr (64)
        on left: 35 36 37
        on right: 22 34 37 92
    expression_statement (65)
        on left: 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59
        on right: 36 38 39 40 41 42 43 44 45 46 47 48 49 50 54 60 61 72 73 74 80 81 84 96 100 101 102
    unary_expr (66)
        on left: 60 61
        on right: 51
    functional_call (67)
        on left: 62 63
        on right: 53
    arg_list (68)
        on left: 64 65
        on right: 63 65
    arg (69)
        on left: 66 67 68 69
        on right: 64 65
    arr_element (70)
        on left: 70 71
        on right: 58 73
    assignment_statement (71)
        on left: 72 73
        on right: 52 87 88
    switch_statment (72)
        on left: 74
        on right: 21
    case_list_def (73)
        on left: 75 76 77
        on right: 74
    case_list (74)
        on left: 78 79
        on right: 75 76 79
    case (75)
        on left: 80 81
        on right: 78 79
    default_stmt (76)
        on left: 82 83
        on right: 76
    if_statement (77)
        on left: 84
        on right: 23
    else_clause (78)
        on left: 85 86
        on right: 84
    for_loop_assignment (79)
        on left: 87 88 89
        on right: 88 92
    for_loop_declaration (80)
        on left: 90 91
        on right: 92
    for_statement (81)
        on left: 92
        on right: 26
    declaration (82)
        on left: 93
        on right: 30 90
    init_declarator_list (83)
        on left: 94 95
        on right: 93 94
    init_declarator (84)
        on left: 96 97 98
        on right: 94 95
    declarator_var (85)
        on left: 99
        on right: 96 97
    declarator_arr (86)
        on left: 100 101
        on right: 98
    while_statement (87)
        on left: 102
        on right: 28
    print_statement (88)
        on left: 103 104
        on right: 24
    print_params (89)
        on left: 105 106
        on right: 104 106
    scanf_statement (90)
        on left: 107
        on right: 25
    addr_list (91)
        on left: 108 109
        on right: 107 109
    addr (92)
        on left: 110
        on right: 108 109


State 0

    0 $accept: . s $end

    CHAR           shift, and go to state 1
    FLOAT          shift, and go to state 2
    INT            shift, and go to state 3
    VOID           shift, and go to state 4
    MAIN_FUNCTION  shift, and go to state 5

    s                       go to state 6
    functional_declaration  go to state 7
    var_type                go to state 8
    func_type               go to state 9
    main_func               go to state 10


State 1

    5 var_type: CHAR .

    $default  reduce using rule 5 (var_type)


State 2

    6 var_type: FLOAT .

    $default  reduce using rule 6 (var_type)


State 3

    4 var_type: INT .
   15 main_func: INT . MAIN_FUNCTION LEFT_ROUND RIGHT_ROUND compound_statement

    MAIN_FUNCTION  shift, and go to state 11

    $default  reduce using rule 4 (var_type)


State 4

    8 func_type: VOID .
   16 main_func: VOID . MAIN_FUNCTION LEFT_ROUND RIGHT_ROUND compound_statement

    MAIN_FUNCTION  shift, and go to state 12

    $default  reduce using rule 8 (func_type)


State 5

   14 main_func: MAIN_FUNCTION . LEFT_ROUND RIGHT_ROUND compound_statement

    LEFT_ROUND  shift, and go to state 13


State 6

    0 $accept: s . $end

    $end  shift, and go to state 14


State 7

    2 s: functional_declaration . s

    CHAR           shift, and go to state 1
    FLOAT          shift, and go to state 2
    INT            shift, and go to state 3
    VOID           shift, and go to state 4
    MAIN_FUNCTION  shift, and go to state 5

    s                       go to state 15
    functional_declaration  go to state 7
    var_type                go to state 8
    func_type               go to state 9
    main_func               go to state 10


State 8

    7 func_type: var_type .

    $default  reduce using rule 7 (func_type)


State 9

    3 functional_declaration: func_type . func_declarator compound_statement

    IDENTIFIER  shift, and go to state 16

    func_declarator  go to state 17


State 10

    1 s: main_func .

    $default  reduce using rule 1 (s)


State 11

   15 main_func: INT MAIN_FUNCTION . LEFT_ROUND RIGHT_ROUND compound_statement

    LEFT_ROUND  shift, and go to state 18


State 12

   16 main_func: VOID MAIN_FUNCTION . LEFT_ROUND RIGHT_ROUND compound_statement

    LEFT_ROUND  shift, and go to state 19


State 13

   14 main_func: MAIN_FUNCTION LEFT_ROUND . RIGHT_ROUND compound_statement

    RIGHT_ROUND  shift, and go to state 20


State 14

    0 $accept: s $end .

    $default  accept


State 15

    2 s: functional_declaration s .

    $default  reduce using rule 2 (s)


State 16

    9 func_declarator: IDENTIFIER . LEFT_ROUND RIGHT_ROUND
   10                | IDENTIFIER . LEFT_ROUND param_list RIGHT_ROUND

    LEFT_ROUND  shift, and go to state 21


State 17

    3 functional_declaration: func_type func_declarator . compound_statement

    LEFT_CURLY  shift, and go to state 22

    compound_statement  go to state 23


State 18

   15 main_func: INT MAIN_FUNCTION LEFT_ROUND . RIGHT_ROUND compound_statement

    RIGHT_ROUND  shift, and go to state 24


State 19

   16 main_func: VOID MAIN_FUNCTION LEFT_ROUND . RIGHT_ROUND compound_statement

    RIGHT_ROUND  shift, and go to state 25


State 20

   14 main_func: MAIN_FUNCTION LEFT_ROUND RIGHT_ROUND . compound_statement

    LEFT_CURLY  shift, and go to state 22

    compound_statement  go to state 26


State 21

    9 func_declarator: IDENTIFIER LEFT_ROUND . RIGHT_ROUND
   10                | IDENTIFIER LEFT_ROUND . param_list RIGHT_ROUND

    CHAR         shift, and go to state 1
    FLOAT        shift, and go to state 2
    INT          shift, and go to state 27
    RIGHT_ROUND  shift, and go to state 28

    var_type     go to state 29
    param_list   go to state 30
    declare_var  go to state 31


State 22

   17 compound_statement: LEFT_CURLY . RIGHT_CURLY
   18                   | LEFT_CURLY . statement_list RIGHT_CURLY

    BREAK           shift, and go to state 32
    CHAR            shift, and go to state 1
    CONTINUE        shift, and go to state 33
    FLOAT           shift, and go to state 2
    FOR             shift, and go to state 34
    IF              shift, and go to state 35
    RETURN          shift, and go to state 36
    INT             shift, and go to state 27
    SWITCH          shift, and go to state 37
    WHILE           shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    I_CONSTANT      shift, and go to state 40
    F_CONSTANT      shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    SEMICOLON       shift, and go to state 43
    LEFT_CURLY      shift, and go to state 22
    RIGHT_CURLY     shift, and go to state 44
    LEFT_ROUND      shift, and go to state 45
    EXCLAMATION     shift, and go to state 46
    HYPHEN          shift, and go to state 47
    PRINTF_TOKEN    shift, and go to state 48
    SCANF_TOKEN     shift, and go to state 49

    var_type              go to state 50
    compound_statement    go to state 51
    statement_list        go to state 52
    single_statement      go to state 53
    jump_statement        go to state 54
    return_statement      go to state 55
    expr                  go to state 56
    expression_statement  go to state 57
    unary_expr            go to state 58
    functional_call       go to state 59
    arr_element           go to state 60
    assignment_statement  go to state 61
    switch_statment       go to state 62
    if_statement          go to state 63
    for_statement         go to state 64
    declaration           go to state 65
    while_statement       go to state 66
    print_statement       go to state 67
    scanf_statement       go to state 68


State 23

    3 functional_declaration: func_type func_declarator compound_statement .

    $default  reduce using rule 3 (functional_declaration)


State 24

   15 main_func: INT MAIN_FUNCTION LEFT_ROUND RIGHT_ROUND . compound_statement

    LEFT_CURLY  shift, and go to state 22

    compound_statement  go to state 69


State 25

   16 main_func: VOID MAIN_FUNCTION LEFT_ROUND RIGHT_ROUND . compound_statement

    LEFT_CURLY  shift, and go to state 22

    compound_statement  go to state 70


State 26

   14 main_func: MAIN_FUNCTION LEFT_ROUND RIGHT_ROUND compound_statement .

    $default  reduce using rule 14 (main_func)


State 27

    4 var_type: INT .

    $default  reduce using rule 4 (var_type)


State 28

    9 func_declarator: IDENTIFIER LEFT_ROUND RIGHT_ROUND .

    $default  reduce using rule 9 (func_declarator)


State 29

   13 declare_var: var_type . IDENTIFIER

    IDENTIFIER  shift, and go to state 71


State 30

   10 func_declarator: IDENTIFIER LEFT_ROUND param_list . RIGHT_ROUND

    RIGHT_ROUND  shift, and go to state 72


State 31

   11 param_list: declare_var .
   12           | declare_var . COMMA param_list

    COMMA  shift, and go to state 73

    $default  reduce using rule 11 (param_list)


State 32

   32 jump_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 74


State 33

   33 jump_statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 75


State 34

   92 for_statement: FOR . LEFT_ROUND for_loop_declaration expr for_loop_assignment RIGHT_ROUND statement_list

    LEFT_ROUND  shift, and go to state 76


State 35

   84 if_statement: IF . LEFT_ROUND expression_statement RIGHT_ROUND single_statement else_clause

    LEFT_ROUND  shift, and go to state 77


State 36

   34 return_statement: RETURN . expr

    IDENTIFIER      shift, and go to state 39
    I_CONSTANT      shift, and go to state 40
    F_CONSTANT      shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    SEMICOLON       shift, and go to state 43
    LEFT_ROUND      shift, and go to state 45
    EXCLAMATION     shift, and go to state 46
    HYPHEN          shift, and go to state 47

    expr                  go to state 78
    expression_statement  go to state 57
    unary_expr            go to state 58
    functional_call       go to state 59
    arr_element           go to state 60
    assignment_statement  go to state 61


State 37

   74 switch_statment: SWITCH . LEFT_ROUND expression_statement RIGHT_ROUND LEFT_CURLY case_list_def RIGHT_CURLY

    LEFT_ROUND  shift, and go to state 79


State 38

  102 while_statement: WHILE . LEFT_ROUND expression_statement RIGHT_ROUND statement_list

    LEFT_ROUND  shift, and go to state 80


State 39

   59 expression_statement: IDENTIFIER .
   62 functional_call: IDENTIFIER . LEFT_ROUND RIGHT_ROUND
   63                | IDENTIFIER . LEFT_ROUND arg_list RIGHT_ROUND
   70 arr_element: IDENTIFIER . LEFT_SQUARE I_CONSTANT RIGHT_SQUARE
   71            | IDENTIFIER . LEFT_SQUARE I_CONSTANT RIGHT_SQUARE LEFT_SQUARE I_CONSTANT RIGHT_SQUARE
   72 assignment_statement: IDENTIFIER . EQUAL_SIGN expression_statement

    EQUAL_SIGN   shift, and go to state 81
    LEFT_ROUND   shift, and go to state 82
    LEFT_SQUARE  shift, and go to state 83

    $default  reduce using rule 59 (expression_statement)


State 40

   55 expression_statement: I_CONSTANT .

    $default  reduce using rule 55 (expression_statement)


State 41

   56 expression_statement: F_CONSTANT .

    $default  reduce using rule 56 (expression_statement)


State 42

   57 expression_statement: STRING_LITERAL .

    $default  reduce using rule 57 (expression_statement)


State 43

   35 expr: SEMICOLON .

    $default  reduce using rule 35 (expr)


State 44

   17 compound_statement: LEFT_CURLY RIGHT_CURLY .

    $default  reduce using rule 17 (compound_statement)


State 45

   54 expression_statement: LEFT_ROUND . expression_statement RIGHT_ROUND

    IDENTIFIER      shift, and go to state 39
    I_CONSTANT      shift, and go to state 40
    F_CONSTANT      shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    LEFT_ROUND      shift, and go to state 45
    EXCLAMATION     shift, and go to state 46
    HYPHEN          shift, and go to state 47

    expression_statement  go to state 84
    unary_expr            go to state 58
    functional_call       go to state 59
    arr_element           go to state 60
    assignment_statement  go to state 61


State 46

   60 unary_expr: EXCLAMATION . expression_statement

    IDENTIFIER      shift, and go to state 39
    I_CONSTANT      shift, and go to state 40
    F_CONSTANT      shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    LEFT_ROUND      shift, and go to state 45
    EXCLAMATION     shift, and go to state 46
    HYPHEN          shift, and go to state 47

    expression_statement  go to state 85
    unary_expr            go to state 58
    functional_call       go to state 59
    arr_element           go to state 60
    assignment_statement  go to state 61


State 47

   61 unary_expr: HYPHEN . expression_statement

    IDENTIFIER      shift, and go to state 39
    I_CONSTANT      shift, and go to state 40
    F_CONSTANT      shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    LEFT_ROUND      shift, and go to state 45
    EXCLAMATION     shift, and go to state 46
    HYPHEN          shift, and go to state 47

    expression_statement  go to state 86
    unary_expr            go to state 58
    functional_call       go to state 59
    arr_element           go to state 60
    assignment_statement  go to state 61


State 48

  103 print_statement: PRINTF_TOKEN . LEFT_ROUND STRING_LITERAL RIGHT_ROUND SEMICOLON
  104                | PRINTF_TOKEN . LEFT_ROUND STRING_LITERAL COMMA print_params RIGHT_ROUND SEMICOLON

    LEFT_ROUND  shift, and go to state 87


State 49

  107 scanf_statement: SCANF_TOKEN . LEFT_ROUND STRING_LITERAL COMMA addr_list RIGHT_ROUND SEMICOLON

    LEFT_ROUND  shift, and go to state 88


State 50

   93 declaration: var_type . init_declarator_list SEMICOLON

    IDENTIFIER  shift, and go to state 89

    init_declarator_list  go to state 90
    init_declarator       go to state 91
    declarator_var        go to state 92
    declarator_arr        go to state 93


State 51

   31 single_statement: compound_statement .

    $default  reduce using rule 31 (single_statement)


State 52

   18 compound_statement: LEFT_CURLY statement_list . RIGHT_CURLY

    RIGHT_CURLY  shift, and go to state 94


State 53

   19 statement_list: single_statement .
   20               | single_statement . statement_list

    BREAK           shift, and go to state 32
    CHAR            shift, and go to state 1
    CONTINUE        shift, and go to state 33
    FLOAT           shift, and go to state 2
    FOR             shift, and go to state 34
    IF              shift, and go to state 35
    RETURN          shift, and go to state 36
    INT             shift, and go to state 27
    SWITCH          shift, and go to state 37
    WHILE           shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    I_CONSTANT      shift, and go to state 40
    F_CONSTANT      shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    SEMICOLON       shift, and go to state 43
    LEFT_CURLY      shift, and go to state 22
    LEFT_ROUND      shift, and go to state 45
    EXCLAMATION     shift, and go to state 46
    HYPHEN          shift, and go to state 47
    PRINTF_TOKEN    shift, and go to state 48
    SCANF_TOKEN     shift, and go to state 49

    BREAK           [reduce using rule 19 (statement_list)]
    CHAR            [reduce using rule 19 (statement_list)]
    CONTINUE        [reduce using rule 19 (statement_list)]
    FLOAT           [reduce using rule 19 (statement_list)]
    FOR             [reduce using rule 19 (statement_list)]
    IF              [reduce using rule 19 (statement_list)]
    RETURN          [reduce using rule 19 (statement_list)]
    INT             [reduce using rule 19 (statement_list)]
    SWITCH          [reduce using rule 19 (statement_list)]
    WHILE           [reduce using rule 19 (statement_list)]
    IDENTIFIER      [reduce using rule 19 (statement_list)]
    I_CONSTANT      [reduce using rule 19 (statement_list)]
    F_CONSTANT      [reduce using rule 19 (statement_list)]
    STRING_LITERAL  [reduce using rule 19 (statement_list)]
    SEMICOLON       [reduce using rule 19 (statement_list)]
    LEFT_CURLY      [reduce using rule 19 (statement_list)]
    LEFT_ROUND      [reduce using rule 19 (statement_list)]
    EXCLAMATION     [reduce using rule 19 (statement_list)]
    HYPHEN          [reduce using rule 19 (statement_list)]
    PRINTF_TOKEN    [reduce using rule 19 (statement_list)]
    SCANF_TOKEN     [reduce using rule 19 (statement_list)]
    $default        reduce using rule 19 (statement_list)

    var_type              go to state 50
    compound_statement    go to state 51
    statement_list        go to state 95
    single_statement      go to state 53
    jump_statement        go to state 54
    return_statement      go to state 55
    expr                  go to state 56
    expression_statement  go to state 57
    unary_expr            go to state 58
    functional_call       go to state 59
    arr_element           go to state 60
    assignment_statement  go to state 61
    switch_statment       go to state 62
    if_statement          go to state 63
    for_statement         go to state 64
    declaration           go to state 65
    while_statement       go to state 66
    print_statement       go to state 67
    scanf_statement       go to state 68


State 54

   29 single_statement: jump_statement .

    $default  reduce using rule 29 (single_statement)


State 55

   27 single_statement: return_statement .

    $default  reduce using rule 27 (single_statement)


State 56

   22 single_statement: expr .
   37 expr: expr . COMMA expr SEMICOLON

    COMMA  shift, and go to state 96

    $default  reduce using rule 22 (single_statement)


State 57

   36 expr: expression_statement . SEMICOLON
   38 expression_statement: expression_statement . OR_OP expression_statement
   39                     | expression_statement . AND_OP expression_statement
   40                     | expression_statement . GT_OP expression_statement
   41                     | expression_statement . LT_OP expression_statement
   42                     | expression_statement . GE_OP expression_statement
   43                     | expression_statement . LE_OP expression_statement
   44                     | expression_statement . PLUS expression_statement
   45                     | expression_statement . HYPHEN expression_statement
   46                     | expression_statement . STAR expression_statement
   47                     | expression_statement . SLASH expression_statement
   48                     | expression_statement . PERCENT expression_statement
   49                     | expression_statement . EQ_OP expression_statement
   50                     | expression_statement . NE_OP expression_statement

    AND_OP     shift, and go to state 97
    OR_OP      shift, and go to state 98
    LE_OP      shift, and go to state 99
    GE_OP      shift, and go to state 100
    EQ_OP      shift, and go to state 101
    NE_OP      shift, and go to state 102
    SEMICOLON  shift, and go to state 103
    HYPHEN     shift, and go to state 104
    PLUS       shift, and go to state 105
    STAR       shift, and go to state 106
    SLASH      shift, and go to state 107
    LT_OP      shift, and go to state 108
    GT_OP      shift, and go to state 109
    PERCENT    shift, and go to state 110


State 58

   51 expression_statement: unary_expr .

    $default  reduce using rule 51 (expression_statement)


State 59

   53 expression_statement: functional_call .

    $default  reduce using rule 53 (expression_statement)


State 60

   58 expression_statement: arr_element .
   73 assignment_statement: arr_element . EQUAL_SIGN expression_statement

    EQUAL_SIGN  shift, and go to state 111

    $default  reduce using rule 58 (expression_statement)


State 61

   52 expression_statement: assignment_statement .

    $default  reduce using rule 52 (expression_statement)


State 62

   21 single_statement: switch_statment .

    $default  reduce using rule 21 (single_statement)


State 63

   23 single_statement: if_statement .

    $default  reduce using rule 23 (single_statement)


State 64

   26 single_statement: for_statement .

    $default  reduce using rule 26 (single_statement)


State 65

   30 single_statement: declaration .

    $default  reduce using rule 30 (single_statement)


State 66

   28 single_statement: while_statement .

    $default  reduce using rule 28 (single_statement)


State 67

   24 single_statement: print_statement .

    $default  reduce using rule 24 (single_statement)


State 68

   25 single_statement: scanf_statement .

    $default  reduce using rule 25 (single_statement)


State 69

   15 main_func: INT MAIN_FUNCTION LEFT_ROUND RIGHT_ROUND compound_statement .

    $default  reduce using rule 15 (main_func)


State 70

   16 main_func: VOID MAIN_FUNCTION LEFT_ROUND RIGHT_ROUND compound_statement .

    $default  reduce using rule 16 (main_func)


State 71

   13 declare_var: var_type IDENTIFIER .

    $default  reduce using rule 13 (declare_var)


State 72

   10 func_declarator: IDENTIFIER LEFT_ROUND param_list RIGHT_ROUND .

    $default  reduce using rule 10 (func_declarator)


State 73

   12 param_list: declare_var COMMA . param_list

    CHAR   shift, and go to state 1
    FLOAT  shift, and go to state 2
    INT    shift, and go to state 27

    var_type     go to state 29
    param_list   go to state 112
    declare_var  go to state 31


State 74

   32 jump_statement: BREAK SEMICOLON .

    $default  reduce using rule 32 (jump_statement)


State 75

   33 jump_statement: CONTINUE SEMICOLON .

    $default  reduce using rule 33 (jump_statement)


State 76

   92 for_statement: FOR LEFT_ROUND . for_loop_declaration expr for_loop_assignment RIGHT_ROUND statement_list

    CHAR       shift, and go to state 1
    FLOAT      shift, and go to state 2
    INT        shift, and go to state 27
    SEMICOLON  shift, and go to state 113

    var_type              go to state 50
    for_loop_declaration  go to state 114
    declaration           go to state 115


State 77

   84 if_statement: IF LEFT_ROUND . expression_statement RIGHT_ROUND single_statement else_clause

    IDENTIFIER      shift, and go to state 39
    I_CONSTANT      shift, and go to state 40
    F_CONSTANT      shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    LEFT_ROUND      shift, and go to state 45
    EXCLAMATION     shift, and go to state 46
    HYPHEN          shift, and go to state 47

    expression_statement  go to state 116
    unary_expr            go to state 58
    functional_call       go to state 59
    arr_element           go to state 60
    assignment_statement  go to state 61


State 78

   34 return_statement: RETURN expr .
   37 expr: expr . COMMA expr SEMICOLON

    COMMA  shift, and go to state 96

    $default  reduce using rule 34 (return_statement)


State 79

   74 switch_statment: SWITCH LEFT_ROUND . expression_statement RIGHT_ROUND LEFT_CURLY case_list_def RIGHT_CURLY

    IDENTIFIER      shift, and go to state 39
    I_CONSTANT      shift, and go to state 40
    F_CONSTANT      shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    LEFT_ROUND      shift, and go to state 45
    EXCLAMATION     shift, and go to state 46
    HYPHEN          shift, and go to state 47

    expression_statement  go to state 117
    unary_expr            go to state 58
    functional_call       go to state 59
    arr_element           go to state 60
    assignment_statement  go to state 61


State 80

  102 while_statement: WHILE LEFT_ROUND . expression_statement RIGHT_ROUND statement_list

    IDENTIFIER      shift, and go to state 39
    I_CONSTANT      shift, and go to state 40
    F_CONSTANT      shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    LEFT_ROUND      shift, and go to state 45
    EXCLAMATION     shift, and go to state 46
    HYPHEN          shift, and go to state 47

    expression_statement  go to state 118
    unary_expr            go to state 58
    functional_call       go to state 59
    arr_element           go to state 60
    assignment_statement  go to state 61


State 81

   72 assignment_statement: IDENTIFIER EQUAL_SIGN . expression_statement

    IDENTIFIER      shift, and go to state 39
    I_CONSTANT      shift, and go to state 40
    F_CONSTANT      shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    LEFT_ROUND      shift, and go to state 45
    EXCLAMATION     shift, and go to state 46
    HYPHEN          shift, and go to state 47

    expression_statement  go to state 119
    unary_expr            go to state 58
    functional_call       go to state 59
    arr_element           go to state 60
    assignment_statement  go to state 61


State 82

   62 functional_call: IDENTIFIER LEFT_ROUND . RIGHT_ROUND
   63                | IDENTIFIER LEFT_ROUND . arg_list RIGHT_ROUND

    IDENTIFIER      shift, and go to state 120
    I_CONSTANT      shift, and go to state 121
    F_CONSTANT      shift, and go to state 122
    STRING_LITERAL  shift, and go to state 123
    RIGHT_ROUND     shift, and go to state 124

    arg_list  go to state 125
    arg       go to state 126


State 83

   70 arr_element: IDENTIFIER LEFT_SQUARE . I_CONSTANT RIGHT_SQUARE
   71            | IDENTIFIER LEFT_SQUARE . I_CONSTANT RIGHT_SQUARE LEFT_SQUARE I_CONSTANT RIGHT_SQUARE

    I_CONSTANT  shift, and go to state 127


State 84

   38 expression_statement: expression_statement . OR_OP expression_statement
   39                     | expression_statement . AND_OP expression_statement
   40                     | expression_statement . GT_OP expression_statement
   41                     | expression_statement . LT_OP expression_statement
   42                     | expression_statement . GE_OP expression_statement
   43                     | expression_statement . LE_OP expression_statement
   44                     | expression_statement . PLUS expression_statement
   45                     | expression_statement . HYPHEN expression_statement
   46                     | expression_statement . STAR expression_statement
   47                     | expression_statement . SLASH expression_statement
   48                     | expression_statement . PERCENT expression_statement
   49                     | expression_statement . EQ_OP expression_statement
   50                     | expression_statement . NE_OP expression_statement
   54                     | LEFT_ROUND expression_statement . RIGHT_ROUND

    AND_OP       shift, and go to state 97
    OR_OP        shift, and go to state 98
    LE_OP        shift, and go to state 99
    GE_OP        shift, and go to state 100
    EQ_OP        shift, and go to state 101
    NE_OP        shift, and go to state 102
    RIGHT_ROUND  shift, and go to state 128
    HYPHEN       shift, and go to state 104
    PLUS         shift, and go to state 105
    STAR         shift, and go to state 106
    SLASH        shift, and go to state 107
    LT_OP        shift, and go to state 108
    GT_OP        shift, and go to state 109
    PERCENT      shift, and go to state 110


State 85

   38 expression_statement: expression_statement . OR_OP expression_statement
   39                     | expression_statement . AND_OP expression_statement
   40                     | expression_statement . GT_OP expression_statement
   41                     | expression_statement . LT_OP expression_statement
   42                     | expression_statement . GE_OP expression_statement
   43                     | expression_statement . LE_OP expression_statement
   44                     | expression_statement . PLUS expression_statement
   45                     | expression_statement . HYPHEN expression_statement
   46                     | expression_statement . STAR expression_statement
   47                     | expression_statement . SLASH expression_statement
   48                     | expression_statement . PERCENT expression_statement
   49                     | expression_statement . EQ_OP expression_statement
   50                     | expression_statement . NE_OP expression_statement
   60 unary_expr: EXCLAMATION expression_statement .

    $default  reduce using rule 60 (unary_expr)


State 86

   38 expression_statement: expression_statement . OR_OP expression_statement
   39                     | expression_statement . AND_OP expression_statement
   40                     | expression_statement . GT_OP expression_statement
   41                     | expression_statement . LT_OP expression_statement
   42                     | expression_statement . GE_OP expression_statement
   43                     | expression_statement . LE_OP expression_statement
   44                     | expression_statement . PLUS expression_statement
   45                     | expression_statement . HYPHEN expression_statement
   46                     | expression_statement . STAR expression_statement
   47                     | expression_statement . SLASH expression_statement
   48                     | expression_statement . PERCENT expression_statement
   49                     | expression_statement . EQ_OP expression_statement
   50                     | expression_statement . NE_OP expression_statement
   61 unary_expr: HYPHEN expression_statement .

    STAR     shift, and go to state 106
    SLASH    shift, and go to state 107
    PERCENT  shift, and go to state 110

    $default  reduce using rule 61 (unary_expr)


State 87

  103 print_statement: PRINTF_TOKEN LEFT_ROUND . STRING_LITERAL RIGHT_ROUND SEMICOLON
  104                | PRINTF_TOKEN LEFT_ROUND . STRING_LITERAL COMMA print_params RIGHT_ROUND SEMICOLON

    STRING_LITERAL  shift, and go to state 129


State 88

  107 scanf_statement: SCANF_TOKEN LEFT_ROUND . STRING_LITERAL COMMA addr_list RIGHT_ROUND SEMICOLON

    STRING_LITERAL  shift, and go to state 130


State 89

   99 declarator_var: IDENTIFIER .
  100 declarator_arr: IDENTIFIER . LEFT_SQUARE expression_statement RIGHT_SQUARE
  101               | IDENTIFIER . LEFT_SQUARE expression_statement RIGHT_SQUARE LEFT_SQUARE expression_statement RIGHT_SQUARE

    LEFT_SQUARE  shift, and go to state 131

    $default  reduce using rule 99 (declarator_var)


State 90

   93 declaration: var_type init_declarator_list . SEMICOLON
   94 init_declarator_list: init_declarator_list . COMMA init_declarator

    SEMICOLON  shift, and go to state 132
    COMMA      shift, and go to state 133


State 91

   95 init_declarator_list: init_declarator .

    $default  reduce using rule 95 (init_declarator_list)


State 92

   96 init_declarator: declarator_var . EQUAL_SIGN expression_statement
   97                | declarator_var .

    EQUAL_SIGN  shift, and go to state 134

    $default  reduce using rule 97 (init_declarator)


State 93

   98 init_declarator: declarator_arr .

    $default  reduce using rule 98 (init_declarator)


State 94

   18 compound_statement: LEFT_CURLY statement_list RIGHT_CURLY .

    $default  reduce using rule 18 (compound_statement)


State 95

   20 statement_list: single_statement statement_list .

    $default  reduce using rule 20 (statement_list)


State 96

   37 expr: expr COMMA . expr SEMICOLON

    IDENTIFIER      shift, and go to state 39
    I_CONSTANT      shift, and go to state 40
    F_CONSTANT      shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    SEMICOLON       shift, and go to state 43
    LEFT_ROUND      shift, and go to state 45
    EXCLAMATION     shift, and go to state 46
    HYPHEN          shift, and go to state 47

    expr                  go to state 135
    expression_statement  go to state 57
    unary_expr            go to state 58
    functional_call       go to state 59
    arr_element           go to state 60
    assignment_statement  go to state 61


State 97

   39 expression_statement: expression_statement AND_OP . expression_statement

    IDENTIFIER      shift, and go to state 39
    I_CONSTANT      shift, and go to state 40
    F_CONSTANT      shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    LEFT_ROUND      shift, and go to state 45
    EXCLAMATION     shift, and go to state 46
    HYPHEN          shift, and go to state 47

    expression_statement  go to state 136
    unary_expr            go to state 58
    functional_call       go to state 59
    arr_element           go to state 60
    assignment_statement  go to state 61


State 98

   38 expression_statement: expression_statement OR_OP . expression_statement

    IDENTIFIER      shift, and go to state 39
    I_CONSTANT      shift, and go to state 40
    F_CONSTANT      shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    LEFT_ROUND      shift, and go to state 45
    EXCLAMATION     shift, and go to state 46
    HYPHEN          shift, and go to state 47

    expression_statement  go to state 137
    unary_expr            go to state 58
    functional_call       go to state 59
    arr_element           go to state 60
    assignment_statement  go to state 61


State 99

   43 expression_statement: expression_statement LE_OP . expression_statement

    IDENTIFIER      shift, and go to state 39
    I_CONSTANT      shift, and go to state 40
    F_CONSTANT      shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    LEFT_ROUND      shift, and go to state 45
    EXCLAMATION     shift, and go to state 46
    HYPHEN          shift, and go to state 47

    expression_statement  go to state 138
    unary_expr            go to state 58
    functional_call       go to state 59
    arr_element           go to state 60
    assignment_statement  go to state 61


State 100

   42 expression_statement: expression_statement GE_OP . expression_statement

    IDENTIFIER      shift, and go to state 39
    I_CONSTANT      shift, and go to state 40
    F_CONSTANT      shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    LEFT_ROUND      shift, and go to state 45
    EXCLAMATION     shift, and go to state 46
    HYPHEN          shift, and go to state 47

    expression_statement  go to state 139
    unary_expr            go to state 58
    functional_call       go to state 59
    arr_element           go to state 60
    assignment_statement  go to state 61


State 101

   49 expression_statement: expression_statement EQ_OP . expression_statement

    IDENTIFIER      shift, and go to state 39
    I_CONSTANT      shift, and go to state 40
    F_CONSTANT      shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    LEFT_ROUND      shift, and go to state 45
    EXCLAMATION     shift, and go to state 46
    HYPHEN          shift, and go to state 47

    expression_statement  go to state 140
    unary_expr            go to state 58
    functional_call       go to state 59
    arr_element           go to state 60
    assignment_statement  go to state 61


State 102

   50 expression_statement: expression_statement NE_OP . expression_statement

    IDENTIFIER      shift, and go to state 39
    I_CONSTANT      shift, and go to state 40
    F_CONSTANT      shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    LEFT_ROUND      shift, and go to state 45
    EXCLAMATION     shift, and go to state 46
    HYPHEN          shift, and go to state 47

    expression_statement  go to state 141
    unary_expr            go to state 58
    functional_call       go to state 59
    arr_element           go to state 60
    assignment_statement  go to state 61


State 103

   36 expr: expression_statement SEMICOLON .

    $default  reduce using rule 36 (expr)


State 104

   45 expression_statement: expression_statement HYPHEN . expression_statement

    IDENTIFIER      shift, and go to state 39
    I_CONSTANT      shift, and go to state 40
    F_CONSTANT      shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    LEFT_ROUND      shift, and go to state 45
    EXCLAMATION     shift, and go to state 46
    HYPHEN          shift, and go to state 47

    expression_statement  go to state 142
    unary_expr            go to state 58
    functional_call       go to state 59
    arr_element           go to state 60
    assignment_statement  go to state 61


State 105

   44 expression_statement: expression_statement PLUS . expression_statement

    IDENTIFIER      shift, and go to state 39
    I_CONSTANT      shift, and go to state 40
    F_CONSTANT      shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    LEFT_ROUND      shift, and go to state 45
    EXCLAMATION     shift, and go to state 46
    HYPHEN          shift, and go to state 47

    expression_statement  go to state 143
    unary_expr            go to state 58
    functional_call       go to state 59
    arr_element           go to state 60
    assignment_statement  go to state 61


State 106

   46 expression_statement: expression_statement STAR . expression_statement

    IDENTIFIER      shift, and go to state 39
    I_CONSTANT      shift, and go to state 40
    F_CONSTANT      shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    LEFT_ROUND      shift, and go to state 45
    EXCLAMATION     shift, and go to state 46
    HYPHEN          shift, and go to state 47

    expression_statement  go to state 144
    unary_expr            go to state 58
    functional_call       go to state 59
    arr_element           go to state 60
    assignment_statement  go to state 61


State 107

   47 expression_statement: expression_statement SLASH . expression_statement

    IDENTIFIER      shift, and go to state 39
    I_CONSTANT      shift, and go to state 40
    F_CONSTANT      shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    LEFT_ROUND      shift, and go to state 45
    EXCLAMATION     shift, and go to state 46
    HYPHEN          shift, and go to state 47

    expression_statement  go to state 145
    unary_expr            go to state 58
    functional_call       go to state 59
    arr_element           go to state 60
    assignment_statement  go to state 61


State 108

   41 expression_statement: expression_statement LT_OP . expression_statement

    IDENTIFIER      shift, and go to state 39
    I_CONSTANT      shift, and go to state 40
    F_CONSTANT      shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    LEFT_ROUND      shift, and go to state 45
    EXCLAMATION     shift, and go to state 46
    HYPHEN          shift, and go to state 47

    expression_statement  go to state 146
    unary_expr            go to state 58
    functional_call       go to state 59
    arr_element           go to state 60
    assignment_statement  go to state 61


State 109

   40 expression_statement: expression_statement GT_OP . expression_statement

    IDENTIFIER      shift, and go to state 39
    I_CONSTANT      shift, and go to state 40
    F_CONSTANT      shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    LEFT_ROUND      shift, and go to state 45
    EXCLAMATION     shift, and go to state 46
    HYPHEN          shift, and go to state 47

    expression_statement  go to state 147
    unary_expr            go to state 58
    functional_call       go to state 59
    arr_element           go to state 60
    assignment_statement  go to state 61


State 110

   48 expression_statement: expression_statement PERCENT . expression_statement

    IDENTIFIER      shift, and go to state 39
    I_CONSTANT      shift, and go to state 40
    F_CONSTANT      shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    LEFT_ROUND      shift, and go to state 45
    EXCLAMATION     shift, and go to state 46
    HYPHEN          shift, and go to state 47

    expression_statement  go to state 148
    unary_expr            go to state 58
    functional_call       go to state 59
    arr_element           go to state 60
    assignment_statement  go to state 61


State 111

   73 assignment_statement: arr_element EQUAL_SIGN . expression_statement

    IDENTIFIER      shift, and go to state 39
    I_CONSTANT      shift, and go to state 40
    F_CONSTANT      shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    LEFT_ROUND      shift, and go to state 45
    EXCLAMATION     shift, and go to state 46
    HYPHEN          shift, and go to state 47

    expression_statement  go to state 149
    unary_expr            go to state 58
    functional_call       go to state 59
    arr_element           go to state 60
    assignment_statement  go to state 61


State 112

   12 param_list: declare_var COMMA param_list .

    $default  reduce using rule 12 (param_list)


State 113

   91 for_loop_declaration: SEMICOLON .

    $default  reduce using rule 91 (for_loop_declaration)


State 114

   92 for_statement: FOR LEFT_ROUND for_loop_declaration . expr for_loop_assignment RIGHT_ROUND statement_list

    IDENTIFIER      shift, and go to state 39
    I_CONSTANT      shift, and go to state 40
    F_CONSTANT      shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    SEMICOLON       shift, and go to state 43
    LEFT_ROUND      shift, and go to state 45
    EXCLAMATION     shift, and go to state 46
    HYPHEN          shift, and go to state 47

    expr                  go to state 150
    expression_statement  go to state 57
    unary_expr            go to state 58
    functional_call       go to state 59
    arr_element           go to state 60
    assignment_statement  go to state 61


State 115

   90 for_loop_declaration: declaration .

    $default  reduce using rule 90 (for_loop_declaration)


State 116

   38 expression_statement: expression_statement . OR_OP expression_statement
   39                     | expression_statement . AND_OP expression_statement
   40                     | expression_statement . GT_OP expression_statement
   41                     | expression_statement . LT_OP expression_statement
   42                     | expression_statement . GE_OP expression_statement
   43                     | expression_statement . LE_OP expression_statement
   44                     | expression_statement . PLUS expression_statement
   45                     | expression_statement . HYPHEN expression_statement
   46                     | expression_statement . STAR expression_statement
   47                     | expression_statement . SLASH expression_statement
   48                     | expression_statement . PERCENT expression_statement
   49                     | expression_statement . EQ_OP expression_statement
   50                     | expression_statement . NE_OP expression_statement
   84 if_statement: IF LEFT_ROUND expression_statement . RIGHT_ROUND single_statement else_clause

    AND_OP       shift, and go to state 97
    OR_OP        shift, and go to state 98
    LE_OP        shift, and go to state 99
    GE_OP        shift, and go to state 100
    EQ_OP        shift, and go to state 101
    NE_OP        shift, and go to state 102
    RIGHT_ROUND  shift, and go to state 151
    HYPHEN       shift, and go to state 104
    PLUS         shift, and go to state 105
    STAR         shift, and go to state 106
    SLASH        shift, and go to state 107
    LT_OP        shift, and go to state 108
    GT_OP        shift, and go to state 109
    PERCENT      shift, and go to state 110


State 117

   38 expression_statement: expression_statement . OR_OP expression_statement
   39                     | expression_statement . AND_OP expression_statement
   40                     | expression_statement . GT_OP expression_statement
   41                     | expression_statement . LT_OP expression_statement
   42                     | expression_statement . GE_OP expression_statement
   43                     | expression_statement . LE_OP expression_statement
   44                     | expression_statement . PLUS expression_statement
   45                     | expression_statement . HYPHEN expression_statement
   46                     | expression_statement . STAR expression_statement
   47                     | expression_statement . SLASH expression_statement
   48                     | expression_statement . PERCENT expression_statement
   49                     | expression_statement . EQ_OP expression_statement
   50                     | expression_statement . NE_OP expression_statement
   74 switch_statment: SWITCH LEFT_ROUND expression_statement . RIGHT_ROUND LEFT_CURLY case_list_def RIGHT_CURLY

    AND_OP       shift, and go to state 97
    OR_OP        shift, and go to state 98
    LE_OP        shift, and go to state 99
    GE_OP        shift, and go to state 100
    EQ_OP        shift, and go to state 101
    NE_OP        shift, and go to state 102
    RIGHT_ROUND  shift, and go to state 152
    HYPHEN       shift, and go to state 104
    PLUS         shift, and go to state 105
    STAR         shift, and go to state 106
    SLASH        shift, and go to state 107
    LT_OP        shift, and go to state 108
    GT_OP        shift, and go to state 109
    PERCENT      shift, and go to state 110


State 118

   38 expression_statement: expression_statement . OR_OP expression_statement
   39                     | expression_statement . AND_OP expression_statement
   40                     | expression_statement . GT_OP expression_statement
   41                     | expression_statement . LT_OP expression_statement
   42                     | expression_statement . GE_OP expression_statement
   43                     | expression_statement . LE_OP expression_statement
   44                     | expression_statement . PLUS expression_statement
   45                     | expression_statement . HYPHEN expression_statement
   46                     | expression_statement . STAR expression_statement
   47                     | expression_statement . SLASH expression_statement
   48                     | expression_statement . PERCENT expression_statement
   49                     | expression_statement . EQ_OP expression_statement
   50                     | expression_statement . NE_OP expression_statement
  102 while_statement: WHILE LEFT_ROUND expression_statement . RIGHT_ROUND statement_list

    AND_OP       shift, and go to state 97
    OR_OP        shift, and go to state 98
    LE_OP        shift, and go to state 99
    GE_OP        shift, and go to state 100
    EQ_OP        shift, and go to state 101
    NE_OP        shift, and go to state 102
    RIGHT_ROUND  shift, and go to state 153
    HYPHEN       shift, and go to state 104
    PLUS         shift, and go to state 105
    STAR         shift, and go to state 106
    SLASH        shift, and go to state 107
    LT_OP        shift, and go to state 108
    GT_OP        shift, and go to state 109
    PERCENT      shift, and go to state 110


State 119

   38 expression_statement: expression_statement . OR_OP expression_statement
   39                     | expression_statement . AND_OP expression_statement
   40                     | expression_statement . GT_OP expression_statement
   41                     | expression_statement . LT_OP expression_statement
   42                     | expression_statement . GE_OP expression_statement
   43                     | expression_statement . LE_OP expression_statement
   44                     | expression_statement . PLUS expression_statement
   45                     | expression_statement . HYPHEN expression_statement
   46                     | expression_statement . STAR expression_statement
   47                     | expression_statement . SLASH expression_statement
   48                     | expression_statement . PERCENT expression_statement
   49                     | expression_statement . EQ_OP expression_statement
   50                     | expression_statement . NE_OP expression_statement
   72 assignment_statement: IDENTIFIER EQUAL_SIGN expression_statement .

    AND_OP   shift, and go to state 97
    OR_OP    shift, and go to state 98
    LE_OP    shift, and go to state 99
    GE_OP    shift, and go to state 100
    EQ_OP    shift, and go to state 101
    NE_OP    shift, and go to state 102
    HYPHEN   shift, and go to state 104
    PLUS     shift, and go to state 105
    STAR     shift, and go to state 106
    SLASH    shift, and go to state 107
    LT_OP    shift, and go to state 108
    GT_OP    shift, and go to state 109
    PERCENT  shift, and go to state 110

    $default  reduce using rule 72 (assignment_statement)


State 120

   68 arg: IDENTIFIER .

    $default  reduce using rule 68 (arg)


State 121

   67 arg: I_CONSTANT .

    $default  reduce using rule 67 (arg)


State 122

   66 arg: F_CONSTANT .

    $default  reduce using rule 66 (arg)


State 123

   69 arg: STRING_LITERAL .

    $default  reduce using rule 69 (arg)


State 124

   62 functional_call: IDENTIFIER LEFT_ROUND RIGHT_ROUND .

    $default  reduce using rule 62 (functional_call)


State 125

   63 functional_call: IDENTIFIER LEFT_ROUND arg_list . RIGHT_ROUND

    RIGHT_ROUND  shift, and go to state 154


State 126

   64 arg_list: arg .
   65         | arg . COMMA arg_list

    COMMA  shift, and go to state 155

    $default  reduce using rule 64 (arg_list)


State 127

   70 arr_element: IDENTIFIER LEFT_SQUARE I_CONSTANT . RIGHT_SQUARE
   71            | IDENTIFIER LEFT_SQUARE I_CONSTANT . RIGHT_SQUARE LEFT_SQUARE I_CONSTANT RIGHT_SQUARE

    RIGHT_SQUARE  shift, and go to state 156


State 128

   54 expression_statement: LEFT_ROUND expression_statement RIGHT_ROUND .

    $default  reduce using rule 54 (expression_statement)


State 129

  103 print_statement: PRINTF_TOKEN LEFT_ROUND STRING_LITERAL . RIGHT_ROUND SEMICOLON
  104                | PRINTF_TOKEN LEFT_ROUND STRING_LITERAL . COMMA print_params RIGHT_ROUND SEMICOLON

    COMMA        shift, and go to state 157
    RIGHT_ROUND  shift, and go to state 158


State 130

  107 scanf_statement: SCANF_TOKEN LEFT_ROUND STRING_LITERAL . COMMA addr_list RIGHT_ROUND SEMICOLON

    COMMA  shift, and go to state 159


State 131

  100 declarator_arr: IDENTIFIER LEFT_SQUARE . expression_statement RIGHT_SQUARE
  101               | IDENTIFIER LEFT_SQUARE . expression_statement RIGHT_SQUARE LEFT_SQUARE expression_statement RIGHT_SQUARE

    IDENTIFIER      shift, and go to state 39
    I_CONSTANT      shift, and go to state 40
    F_CONSTANT      shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    LEFT_ROUND      shift, and go to state 45
    EXCLAMATION     shift, and go to state 46
    HYPHEN          shift, and go to state 47

    expression_statement  go to state 160
    unary_expr            go to state 58
    functional_call       go to state 59
    arr_element           go to state 60
    assignment_statement  go to state 61


State 132

   93 declaration: var_type init_declarator_list SEMICOLON .

    $default  reduce using rule 93 (declaration)


State 133

   94 init_declarator_list: init_declarator_list COMMA . init_declarator

    IDENTIFIER  shift, and go to state 89

    init_declarator  go to state 161
    declarator_var   go to state 92
    declarator_arr   go to state 93


State 134

   96 init_declarator: declarator_var EQUAL_SIGN . expression_statement

    IDENTIFIER      shift, and go to state 39
    I_CONSTANT      shift, and go to state 40
    F_CONSTANT      shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    LEFT_ROUND      shift, and go to state 45
    EXCLAMATION     shift, and go to state 46
    HYPHEN          shift, and go to state 47

    expression_statement  go to state 162
    unary_expr            go to state 58
    functional_call       go to state 59
    arr_element           go to state 60
    assignment_statement  go to state 61


State 135

   37 expr: expr . COMMA expr SEMICOLON
   37     | expr COMMA expr . SEMICOLON

    SEMICOLON  shift, and go to state 163
    COMMA      shift, and go to state 96


State 136

   38 expression_statement: expression_statement . OR_OP expression_statement
   39                     | expression_statement . AND_OP expression_statement
   39                     | expression_statement AND_OP expression_statement .
   40                     | expression_statement . GT_OP expression_statement
   41                     | expression_statement . LT_OP expression_statement
   42                     | expression_statement . GE_OP expression_statement
   43                     | expression_statement . LE_OP expression_statement
   44                     | expression_statement . PLUS expression_statement
   45                     | expression_statement . HYPHEN expression_statement
   46                     | expression_statement . STAR expression_statement
   47                     | expression_statement . SLASH expression_statement
   48                     | expression_statement . PERCENT expression_statement
   49                     | expression_statement . EQ_OP expression_statement
   50                     | expression_statement . NE_OP expression_statement

    LE_OP    shift, and go to state 99
    GE_OP    shift, and go to state 100
    EQ_OP    shift, and go to state 101
    NE_OP    shift, and go to state 102
    HYPHEN   shift, and go to state 104
    PLUS     shift, and go to state 105
    STAR     shift, and go to state 106
    SLASH    shift, and go to state 107
    LT_OP    shift, and go to state 108
    GT_OP    shift, and go to state 109
    PERCENT  shift, and go to state 110

    $default  reduce using rule 39 (expression_statement)


State 137

   38 expression_statement: expression_statement . OR_OP expression_statement
   38                     | expression_statement OR_OP expression_statement .
   39                     | expression_statement . AND_OP expression_statement
   40                     | expression_statement . GT_OP expression_statement
   41                     | expression_statement . LT_OP expression_statement
   42                     | expression_statement . GE_OP expression_statement
   43                     | expression_statement . LE_OP expression_statement
   44                     | expression_statement . PLUS expression_statement
   45                     | expression_statement . HYPHEN expression_statement
   46                     | expression_statement . STAR expression_statement
   47                     | expression_statement . SLASH expression_statement
   48                     | expression_statement . PERCENT expression_statement
   49                     | expression_statement . EQ_OP expression_statement
   50                     | expression_statement . NE_OP expression_statement

    AND_OP   shift, and go to state 97
    LE_OP    shift, and go to state 99
    GE_OP    shift, and go to state 100
    EQ_OP    shift, and go to state 101
    NE_OP    shift, and go to state 102
    HYPHEN   shift, and go to state 104
    PLUS     shift, and go to state 105
    STAR     shift, and go to state 106
    SLASH    shift, and go to state 107
    LT_OP    shift, and go to state 108
    GT_OP    shift, and go to state 109
    PERCENT  shift, and go to state 110

    $default  reduce using rule 38 (expression_statement)


State 138

   38 expression_statement: expression_statement . OR_OP expression_statement
   39                     | expression_statement . AND_OP expression_statement
   40                     | expression_statement . GT_OP expression_statement
   41                     | expression_statement . LT_OP expression_statement
   42                     | expression_statement . GE_OP expression_statement
   43                     | expression_statement . LE_OP expression_statement
   43                     | expression_statement LE_OP expression_statement .
   44                     | expression_statement . PLUS expression_statement
   45                     | expression_statement . HYPHEN expression_statement
   46                     | expression_statement . STAR expression_statement
   47                     | expression_statement . SLASH expression_statement
   48                     | expression_statement . PERCENT expression_statement
   49                     | expression_statement . EQ_OP expression_statement
   50                     | expression_statement . NE_OP expression_statement

    HYPHEN   shift, and go to state 104
    PLUS     shift, and go to state 105
    STAR     shift, and go to state 106
    SLASH    shift, and go to state 107
    PERCENT  shift, and go to state 110

    $default  reduce using rule 43 (expression_statement)


State 139

   38 expression_statement: expression_statement . OR_OP expression_statement
   39                     | expression_statement . AND_OP expression_statement
   40                     | expression_statement . GT_OP expression_statement
   41                     | expression_statement . LT_OP expression_statement
   42                     | expression_statement . GE_OP expression_statement
   42                     | expression_statement GE_OP expression_statement .
   43                     | expression_statement . LE_OP expression_statement
   44                     | expression_statement . PLUS expression_statement
   45                     | expression_statement . HYPHEN expression_statement
   46                     | expression_statement . STAR expression_statement
   47                     | expression_statement . SLASH expression_statement
   48                     | expression_statement . PERCENT expression_statement
   49                     | expression_statement . EQ_OP expression_statement
   50                     | expression_statement . NE_OP expression_statement

    HYPHEN   shift, and go to state 104
    PLUS     shift, and go to state 105
    STAR     shift, and go to state 106
    SLASH    shift, and go to state 107
    PERCENT  shift, and go to state 110

    $default  reduce using rule 42 (expression_statement)


State 140

   38 expression_statement: expression_statement . OR_OP expression_statement
   39                     | expression_statement . AND_OP expression_statement
   40                     | expression_statement . GT_OP expression_statement
   41                     | expression_statement . LT_OP expression_statement
   42                     | expression_statement . GE_OP expression_statement
   43                     | expression_statement . LE_OP expression_statement
   44                     | expression_statement . PLUS expression_statement
   45                     | expression_statement . HYPHEN expression_statement
   46                     | expression_statement . STAR expression_statement
   47                     | expression_statement . SLASH expression_statement
   48                     | expression_statement . PERCENT expression_statement
   49                     | expression_statement . EQ_OP expression_statement
   49                     | expression_statement EQ_OP expression_statement .
   50                     | expression_statement . NE_OP expression_statement

    LE_OP    shift, and go to state 99
    GE_OP    shift, and go to state 100
    HYPHEN   shift, and go to state 104
    PLUS     shift, and go to state 105
    STAR     shift, and go to state 106
    SLASH    shift, and go to state 107
    LT_OP    shift, and go to state 108
    GT_OP    shift, and go to state 109
    PERCENT  shift, and go to state 110

    $default  reduce using rule 49 (expression_statement)


State 141

   38 expression_statement: expression_statement . OR_OP expression_statement
   39                     | expression_statement . AND_OP expression_statement
   40                     | expression_statement . GT_OP expression_statement
   41                     | expression_statement . LT_OP expression_statement
   42                     | expression_statement . GE_OP expression_statement
   43                     | expression_statement . LE_OP expression_statement
   44                     | expression_statement . PLUS expression_statement
   45                     | expression_statement . HYPHEN expression_statement
   46                     | expression_statement . STAR expression_statement
   47                     | expression_statement . SLASH expression_statement
   48                     | expression_statement . PERCENT expression_statement
   49                     | expression_statement . EQ_OP expression_statement
   50                     | expression_statement . NE_OP expression_statement
   50                     | expression_statement NE_OP expression_statement .

    LE_OP    shift, and go to state 99
    GE_OP    shift, and go to state 100
    HYPHEN   shift, and go to state 104
    PLUS     shift, and go to state 105
    STAR     shift, and go to state 106
    SLASH    shift, and go to state 107
    LT_OP    shift, and go to state 108
    GT_OP    shift, and go to state 109
    PERCENT  shift, and go to state 110

    $default  reduce using rule 50 (expression_statement)


State 142

   38 expression_statement: expression_statement . OR_OP expression_statement
   39                     | expression_statement . AND_OP expression_statement
   40                     | expression_statement . GT_OP expression_statement
   41                     | expression_statement . LT_OP expression_statement
   42                     | expression_statement . GE_OP expression_statement
   43                     | expression_statement . LE_OP expression_statement
   44                     | expression_statement . PLUS expression_statement
   45                     | expression_statement . HYPHEN expression_statement
   45                     | expression_statement HYPHEN expression_statement .
   46                     | expression_statement . STAR expression_statement
   47                     | expression_statement . SLASH expression_statement
   48                     | expression_statement . PERCENT expression_statement
   49                     | expression_statement . EQ_OP expression_statement
   50                     | expression_statement . NE_OP expression_statement

    STAR     shift, and go to state 106
    SLASH    shift, and go to state 107
    PERCENT  shift, and go to state 110

    $default  reduce using rule 45 (expression_statement)


State 143

   38 expression_statement: expression_statement . OR_OP expression_statement
   39                     | expression_statement . AND_OP expression_statement
   40                     | expression_statement . GT_OP expression_statement
   41                     | expression_statement . LT_OP expression_statement
   42                     | expression_statement . GE_OP expression_statement
   43                     | expression_statement . LE_OP expression_statement
   44                     | expression_statement . PLUS expression_statement
   44                     | expression_statement PLUS expression_statement .
   45                     | expression_statement . HYPHEN expression_statement
   46                     | expression_statement . STAR expression_statement
   47                     | expression_statement . SLASH expression_statement
   48                     | expression_statement . PERCENT expression_statement
   49                     | expression_statement . EQ_OP expression_statement
   50                     | expression_statement . NE_OP expression_statement

    STAR     shift, and go to state 106
    SLASH    shift, and go to state 107
    PERCENT  shift, and go to state 110

    $default  reduce using rule 44 (expression_statement)


State 144

   38 expression_statement: expression_statement . OR_OP expression_statement
   39                     | expression_statement . AND_OP expression_statement
   40                     | expression_statement . GT_OP expression_statement
   41                     | expression_statement . LT_OP expression_statement
   42                     | expression_statement . GE_OP expression_statement
   43                     | expression_statement . LE_OP expression_statement
   44                     | expression_statement . PLUS expression_statement
   45                     | expression_statement . HYPHEN expression_statement
   46                     | expression_statement . STAR expression_statement
   46                     | expression_statement STAR expression_statement .
   47                     | expression_statement . SLASH expression_statement
   48                     | expression_statement . PERCENT expression_statement
   49                     | expression_statement . EQ_OP expression_statement
   50                     | expression_statement . NE_OP expression_statement

    $default  reduce using rule 46 (expression_statement)


State 145

   38 expression_statement: expression_statement . OR_OP expression_statement
   39                     | expression_statement . AND_OP expression_statement
   40                     | expression_statement . GT_OP expression_statement
   41                     | expression_statement . LT_OP expression_statement
   42                     | expression_statement . GE_OP expression_statement
   43                     | expression_statement . LE_OP expression_statement
   44                     | expression_statement . PLUS expression_statement
   45                     | expression_statement . HYPHEN expression_statement
   46                     | expression_statement . STAR expression_statement
   47                     | expression_statement . SLASH expression_statement
   47                     | expression_statement SLASH expression_statement .
   48                     | expression_statement . PERCENT expression_statement
   49                     | expression_statement . EQ_OP expression_statement
   50                     | expression_statement . NE_OP expression_statement

    $default  reduce using rule 47 (expression_statement)


State 146

   38 expression_statement: expression_statement . OR_OP expression_statement
   39                     | expression_statement . AND_OP expression_statement
   40                     | expression_statement . GT_OP expression_statement
   41                     | expression_statement . LT_OP expression_statement
   41                     | expression_statement LT_OP expression_statement .
   42                     | expression_statement . GE_OP expression_statement
   43                     | expression_statement . LE_OP expression_statement
   44                     | expression_statement . PLUS expression_statement
   45                     | expression_statement . HYPHEN expression_statement
   46                     | expression_statement . STAR expression_statement
   47                     | expression_statement . SLASH expression_statement
   48                     | expression_statement . PERCENT expression_statement
   49                     | expression_statement . EQ_OP expression_statement
   50                     | expression_statement . NE_OP expression_statement

    HYPHEN   shift, and go to state 104
    PLUS     shift, and go to state 105
    STAR     shift, and go to state 106
    SLASH    shift, and go to state 107
    PERCENT  shift, and go to state 110

    $default  reduce using rule 41 (expression_statement)


State 147

   38 expression_statement: expression_statement . OR_OP expression_statement
   39                     | expression_statement . AND_OP expression_statement
   40                     | expression_statement . GT_OP expression_statement
   40                     | expression_statement GT_OP expression_statement .
   41                     | expression_statement . LT_OP expression_statement
   42                     | expression_statement . GE_OP expression_statement
   43                     | expression_statement . LE_OP expression_statement
   44                     | expression_statement . PLUS expression_statement
   45                     | expression_statement . HYPHEN expression_statement
   46                     | expression_statement . STAR expression_statement
   47                     | expression_statement . SLASH expression_statement
   48                     | expression_statement . PERCENT expression_statement
   49                     | expression_statement . EQ_OP expression_statement
   50                     | expression_statement . NE_OP expression_statement

    HYPHEN   shift, and go to state 104
    PLUS     shift, and go to state 105
    STAR     shift, and go to state 106
    SLASH    shift, and go to state 107
    PERCENT  shift, and go to state 110

    $default  reduce using rule 40 (expression_statement)


State 148

   38 expression_statement: expression_statement . OR_OP expression_statement
   39                     | expression_statement . AND_OP expression_statement
   40                     | expression_statement . GT_OP expression_statement
   41                     | expression_statement . LT_OP expression_statement
   42                     | expression_statement . GE_OP expression_statement
   43                     | expression_statement . LE_OP expression_statement
   44                     | expression_statement . PLUS expression_statement
   45                     | expression_statement . HYPHEN expression_statement
   46                     | expression_statement . STAR expression_statement
   47                     | expression_statement . SLASH expression_statement
   48                     | expression_statement . PERCENT expression_statement
   48                     | expression_statement PERCENT expression_statement .
   49                     | expression_statement . EQ_OP expression_statement
   50                     | expression_statement . NE_OP expression_statement

    $default  reduce using rule 48 (expression_statement)


State 149

   38 expression_statement: expression_statement . OR_OP expression_statement
   39                     | expression_statement . AND_OP expression_statement
   40                     | expression_statement . GT_OP expression_statement
   41                     | expression_statement . LT_OP expression_statement
   42                     | expression_statement . GE_OP expression_statement
   43                     | expression_statement . LE_OP expression_statement
   44                     | expression_statement . PLUS expression_statement
   45                     | expression_statement . HYPHEN expression_statement
   46                     | expression_statement . STAR expression_statement
   47                     | expression_statement . SLASH expression_statement
   48                     | expression_statement . PERCENT expression_statement
   49                     | expression_statement . EQ_OP expression_statement
   50                     | expression_statement . NE_OP expression_statement
   73 assignment_statement: arr_element EQUAL_SIGN expression_statement .

    AND_OP   shift, and go to state 97
    OR_OP    shift, and go to state 98
    LE_OP    shift, and go to state 99
    GE_OP    shift, and go to state 100
    EQ_OP    shift, and go to state 101
    NE_OP    shift, and go to state 102
    HYPHEN   shift, and go to state 104
    PLUS     shift, and go to state 105
    STAR     shift, and go to state 106
    SLASH    shift, and go to state 107
    LT_OP    shift, and go to state 108
    GT_OP    shift, and go to state 109
    PERCENT  shift, and go to state 110

    $default  reduce using rule 73 (assignment_statement)


State 150

   37 expr: expr . COMMA expr SEMICOLON
   92 for_statement: FOR LEFT_ROUND for_loop_declaration expr . for_loop_assignment RIGHT_ROUND statement_list

    IDENTIFIER  shift, and go to state 164
    COMMA       shift, and go to state 96

    $default  reduce using rule 89 (for_loop_assignment)

    arr_element           go to state 165
    assignment_statement  go to state 166
    for_loop_assignment   go to state 167


State 151

   84 if_statement: IF LEFT_ROUND expression_statement RIGHT_ROUND . single_statement else_clause

    BREAK           shift, and go to state 32
    CHAR            shift, and go to state 1
    CONTINUE        shift, and go to state 33
    FLOAT           shift, and go to state 2
    FOR             shift, and go to state 34
    IF              shift, and go to state 35
    RETURN          shift, and go to state 36
    INT             shift, and go to state 27
    SWITCH          shift, and go to state 37
    WHILE           shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    I_CONSTANT      shift, and go to state 40
    F_CONSTANT      shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    SEMICOLON       shift, and go to state 43
    LEFT_CURLY      shift, and go to state 22
    LEFT_ROUND      shift, and go to state 45
    EXCLAMATION     shift, and go to state 46
    HYPHEN          shift, and go to state 47
    PRINTF_TOKEN    shift, and go to state 48
    SCANF_TOKEN     shift, and go to state 49

    var_type              go to state 50
    compound_statement    go to state 51
    single_statement      go to state 168
    jump_statement        go to state 54
    return_statement      go to state 55
    expr                  go to state 56
    expression_statement  go to state 57
    unary_expr            go to state 58
    functional_call       go to state 59
    arr_element           go to state 60
    assignment_statement  go to state 61
    switch_statment       go to state 62
    if_statement          go to state 63
    for_statement         go to state 64
    declaration           go to state 65
    while_statement       go to state 66
    print_statement       go to state 67
    scanf_statement       go to state 68


State 152

   74 switch_statment: SWITCH LEFT_ROUND expression_statement RIGHT_ROUND . LEFT_CURLY case_list_def RIGHT_CURLY

    LEFT_CURLY  shift, and go to state 169


State 153

  102 while_statement: WHILE LEFT_ROUND expression_statement RIGHT_ROUND . statement_list

    BREAK           shift, and go to state 32
    CHAR            shift, and go to state 1
    CONTINUE        shift, and go to state 33
    FLOAT           shift, and go to state 2
    FOR             shift, and go to state 34
    IF              shift, and go to state 35
    RETURN          shift, and go to state 36
    INT             shift, and go to state 27
    SWITCH          shift, and go to state 37
    WHILE           shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    I_CONSTANT      shift, and go to state 40
    F_CONSTANT      shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    SEMICOLON       shift, and go to state 43
    LEFT_CURLY      shift, and go to state 22
    LEFT_ROUND      shift, and go to state 45
    EXCLAMATION     shift, and go to state 46
    HYPHEN          shift, and go to state 47
    PRINTF_TOKEN    shift, and go to state 48
    SCANF_TOKEN     shift, and go to state 49

    var_type              go to state 50
    compound_statement    go to state 51
    statement_list        go to state 170
    single_statement      go to state 53
    jump_statement        go to state 54
    return_statement      go to state 55
    expr                  go to state 56
    expression_statement  go to state 57
    unary_expr            go to state 58
    functional_call       go to state 59
    arr_element           go to state 60
    assignment_statement  go to state 61
    switch_statment       go to state 62
    if_statement          go to state 63
    for_statement         go to state 64
    declaration           go to state 65
    while_statement       go to state 66
    print_statement       go to state 67
    scanf_statement       go to state 68


State 154

   63 functional_call: IDENTIFIER LEFT_ROUND arg_list RIGHT_ROUND .

    $default  reduce using rule 63 (functional_call)


State 155

   65 arg_list: arg COMMA . arg_list

    IDENTIFIER      shift, and go to state 120
    I_CONSTANT      shift, and go to state 121
    F_CONSTANT      shift, and go to state 122
    STRING_LITERAL  shift, and go to state 123

    arg_list  go to state 171
    arg       go to state 126


State 156

   70 arr_element: IDENTIFIER LEFT_SQUARE I_CONSTANT RIGHT_SQUARE .
   71            | IDENTIFIER LEFT_SQUARE I_CONSTANT RIGHT_SQUARE . LEFT_SQUARE I_CONSTANT RIGHT_SQUARE

    LEFT_SQUARE  shift, and go to state 172

    $default  reduce using rule 70 (arr_element)


State 157

  104 print_statement: PRINTF_TOKEN LEFT_ROUND STRING_LITERAL COMMA . print_params RIGHT_ROUND SEMICOLON

    IDENTIFIER  shift, and go to state 173

    print_params  go to state 174


State 158

  103 print_statement: PRINTF_TOKEN LEFT_ROUND STRING_LITERAL RIGHT_ROUND . SEMICOLON

    SEMICOLON  shift, and go to state 175


State 159

  107 scanf_statement: SCANF_TOKEN LEFT_ROUND STRING_LITERAL COMMA . addr_list RIGHT_ROUND SEMICOLON

    AMPERSAND  shift, and go to state 176

    addr_list  go to state 177
    addr       go to state 178


State 160

   38 expression_statement: expression_statement . OR_OP expression_statement
   39                     | expression_statement . AND_OP expression_statement
   40                     | expression_statement . GT_OP expression_statement
   41                     | expression_statement . LT_OP expression_statement
   42                     | expression_statement . GE_OP expression_statement
   43                     | expression_statement . LE_OP expression_statement
   44                     | expression_statement . PLUS expression_statement
   45                     | expression_statement . HYPHEN expression_statement
   46                     | expression_statement . STAR expression_statement
   47                     | expression_statement . SLASH expression_statement
   48                     | expression_statement . PERCENT expression_statement
   49                     | expression_statement . EQ_OP expression_statement
   50                     | expression_statement . NE_OP expression_statement
  100 declarator_arr: IDENTIFIER LEFT_SQUARE expression_statement . RIGHT_SQUARE
  101               | IDENTIFIER LEFT_SQUARE expression_statement . RIGHT_SQUARE LEFT_SQUARE expression_statement RIGHT_SQUARE

    AND_OP        shift, and go to state 97
    OR_OP         shift, and go to state 98
    LE_OP         shift, and go to state 99
    GE_OP         shift, and go to state 100
    EQ_OP         shift, and go to state 101
    NE_OP         shift, and go to state 102
    RIGHT_SQUARE  shift, and go to state 179
    HYPHEN        shift, and go to state 104
    PLUS          shift, and go to state 105
    STAR          shift, and go to state 106
    SLASH         shift, and go to state 107
    LT_OP         shift, and go to state 108
    GT_OP         shift, and go to state 109
    PERCENT       shift, and go to state 110


State 161

   94 init_declarator_list: init_declarator_list COMMA init_declarator .

    $default  reduce using rule 94 (init_declarator_list)


State 162

   38 expression_statement: expression_statement . OR_OP expression_statement
   39                     | expression_statement . AND_OP expression_statement
   40                     | expression_statement . GT_OP expression_statement
   41                     | expression_statement . LT_OP expression_statement
   42                     | expression_statement . GE_OP expression_statement
   43                     | expression_statement . LE_OP expression_statement
   44                     | expression_statement . PLUS expression_statement
   45                     | expression_statement . HYPHEN expression_statement
   46                     | expression_statement . STAR expression_statement
   47                     | expression_statement . SLASH expression_statement
   48                     | expression_statement . PERCENT expression_statement
   49                     | expression_statement . EQ_OP expression_statement
   50                     | expression_statement . NE_OP expression_statement
   96 init_declarator: declarator_var EQUAL_SIGN expression_statement .

    AND_OP   shift, and go to state 97
    OR_OP    shift, and go to state 98
    LE_OP    shift, and go to state 99
    GE_OP    shift, and go to state 100
    EQ_OP    shift, and go to state 101
    NE_OP    shift, and go to state 102
    HYPHEN   shift, and go to state 104
    PLUS     shift, and go to state 105
    STAR     shift, and go to state 106
    SLASH    shift, and go to state 107
    LT_OP    shift, and go to state 108
    GT_OP    shift, and go to state 109
    PERCENT  shift, and go to state 110

    $default  reduce using rule 96 (init_declarator)


State 163

   37 expr: expr COMMA expr SEMICOLON .

    $default  reduce using rule 37 (expr)


State 164

   70 arr_element: IDENTIFIER . LEFT_SQUARE I_CONSTANT RIGHT_SQUARE
   71            | IDENTIFIER . LEFT_SQUARE I_CONSTANT RIGHT_SQUARE LEFT_SQUARE I_CONSTANT RIGHT_SQUARE
   72 assignment_statement: IDENTIFIER . EQUAL_SIGN expression_statement

    EQUAL_SIGN   shift, and go to state 81
    LEFT_SQUARE  shift, and go to state 83


State 165

   73 assignment_statement: arr_element . EQUAL_SIGN expression_statement

    EQUAL_SIGN  shift, and go to state 111


State 166

   87 for_loop_assignment: assignment_statement .
   88                    | assignment_statement . COMMA for_loop_assignment

    COMMA  shift, and go to state 180

    $default  reduce using rule 87 (for_loop_assignment)


State 167

   92 for_statement: FOR LEFT_ROUND for_loop_declaration expr for_loop_assignment . RIGHT_ROUND statement_list

    RIGHT_ROUND  shift, and go to state 181


State 168

   84 if_statement: IF LEFT_ROUND expression_statement RIGHT_ROUND single_statement . else_clause

    ELSE  shift, and go to state 182

    ELSE      [reduce using rule 86 (else_clause)]
    $default  reduce using rule 86 (else_clause)

    else_clause  go to state 183


State 169

   74 switch_statment: SWITCH LEFT_ROUND expression_statement RIGHT_ROUND LEFT_CURLY . case_list_def RIGHT_CURLY

    CASE  shift, and go to state 184

    $default  reduce using rule 77 (case_list_def)

    case_list_def  go to state 185
    case_list      go to state 186
    case           go to state 187


State 170

  102 while_statement: WHILE LEFT_ROUND expression_statement RIGHT_ROUND statement_list .

    $default  reduce using rule 102 (while_statement)


State 171

   65 arg_list: arg COMMA arg_list .

    $default  reduce using rule 65 (arg_list)


State 172

   71 arr_element: IDENTIFIER LEFT_SQUARE I_CONSTANT RIGHT_SQUARE LEFT_SQUARE . I_CONSTANT RIGHT_SQUARE

    I_CONSTANT  shift, and go to state 188


State 173

  105 print_params: IDENTIFIER .
  106             | IDENTIFIER . COMMA print_params

    COMMA  shift, and go to state 189

    $default  reduce using rule 105 (print_params)


State 174

  104 print_statement: PRINTF_TOKEN LEFT_ROUND STRING_LITERAL COMMA print_params . RIGHT_ROUND SEMICOLON

    RIGHT_ROUND  shift, and go to state 190


State 175

  103 print_statement: PRINTF_TOKEN LEFT_ROUND STRING_LITERAL RIGHT_ROUND SEMICOLON .

    $default  reduce using rule 103 (print_statement)


State 176

  110 addr: AMPERSAND . IDENTIFIER

    IDENTIFIER  shift, and go to state 191


State 177

  107 scanf_statement: SCANF_TOKEN LEFT_ROUND STRING_LITERAL COMMA addr_list . RIGHT_ROUND SEMICOLON

    RIGHT_ROUND  shift, and go to state 192


State 178

  108 addr_list: addr .
  109          | addr . COMMA addr_list

    COMMA  shift, and go to state 193

    $default  reduce using rule 108 (addr_list)


State 179

  100 declarator_arr: IDENTIFIER LEFT_SQUARE expression_statement RIGHT_SQUARE .
  101               | IDENTIFIER LEFT_SQUARE expression_statement RIGHT_SQUARE . LEFT_SQUARE expression_statement RIGHT_SQUARE

    LEFT_SQUARE  shift, and go to state 194

    $default  reduce using rule 100 (declarator_arr)


State 180

   88 for_loop_assignment: assignment_statement COMMA . for_loop_assignment

    IDENTIFIER  shift, and go to state 164

    $default  reduce using rule 89 (for_loop_assignment)

    arr_element           go to state 165
    assignment_statement  go to state 166
    for_loop_assignment   go to state 195


State 181

   92 for_statement: FOR LEFT_ROUND for_loop_declaration expr for_loop_assignment RIGHT_ROUND . statement_list

    BREAK           shift, and go to state 32
    CHAR            shift, and go to state 1
    CONTINUE        shift, and go to state 33
    FLOAT           shift, and go to state 2
    FOR             shift, and go to state 34
    IF              shift, and go to state 35
    RETURN          shift, and go to state 36
    INT             shift, and go to state 27
    SWITCH          shift, and go to state 37
    WHILE           shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    I_CONSTANT      shift, and go to state 40
    F_CONSTANT      shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    SEMICOLON       shift, and go to state 43
    LEFT_CURLY      shift, and go to state 22
    LEFT_ROUND      shift, and go to state 45
    EXCLAMATION     shift, and go to state 46
    HYPHEN          shift, and go to state 47
    PRINTF_TOKEN    shift, and go to state 48
    SCANF_TOKEN     shift, and go to state 49

    var_type              go to state 50
    compound_statement    go to state 51
    statement_list        go to state 196
    single_statement      go to state 53
    jump_statement        go to state 54
    return_statement      go to state 55
    expr                  go to state 56
    expression_statement  go to state 57
    unary_expr            go to state 58
    functional_call       go to state 59
    arr_element           go to state 60
    assignment_statement  go to state 61
    switch_statment       go to state 62
    if_statement          go to state 63
    for_statement         go to state 64
    declaration           go to state 65
    while_statement       go to state 66
    print_statement       go to state 67
    scanf_statement       go to state 68


State 182

   85 else_clause: ELSE . single_statement

    BREAK           shift, and go to state 32
    CHAR            shift, and go to state 1
    CONTINUE        shift, and go to state 33
    FLOAT           shift, and go to state 2
    FOR             shift, and go to state 34
    IF              shift, and go to state 35
    RETURN          shift, and go to state 36
    INT             shift, and go to state 27
    SWITCH          shift, and go to state 37
    WHILE           shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    I_CONSTANT      shift, and go to state 40
    F_CONSTANT      shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    SEMICOLON       shift, and go to state 43
    LEFT_CURLY      shift, and go to state 22
    LEFT_ROUND      shift, and go to state 45
    EXCLAMATION     shift, and go to state 46
    HYPHEN          shift, and go to state 47
    PRINTF_TOKEN    shift, and go to state 48
    SCANF_TOKEN     shift, and go to state 49

    var_type              go to state 50
    compound_statement    go to state 51
    single_statement      go to state 197
    jump_statement        go to state 54
    return_statement      go to state 55
    expr                  go to state 56
    expression_statement  go to state 57
    unary_expr            go to state 58
    functional_call       go to state 59
    arr_element           go to state 60
    assignment_statement  go to state 61
    switch_statment       go to state 62
    if_statement          go to state 63
    for_statement         go to state 64
    declaration           go to state 65
    while_statement       go to state 66
    print_statement       go to state 67
    scanf_statement       go to state 68


State 183

   84 if_statement: IF LEFT_ROUND expression_statement RIGHT_ROUND single_statement else_clause .

    $default  reduce using rule 84 (if_statement)


State 184

   80 case: CASE . expression_statement COLON statement_list
   81     | CASE . expression_statement COLON

    IDENTIFIER      shift, and go to state 39
    I_CONSTANT      shift, and go to state 40
    F_CONSTANT      shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    LEFT_ROUND      shift, and go to state 45
    EXCLAMATION     shift, and go to state 46
    HYPHEN          shift, and go to state 47

    expression_statement  go to state 198
    unary_expr            go to state 58
    functional_call       go to state 59
    arr_element           go to state 60
    assignment_statement  go to state 61


State 185

   74 switch_statment: SWITCH LEFT_ROUND expression_statement RIGHT_ROUND LEFT_CURLY case_list_def . RIGHT_CURLY

    RIGHT_CURLY  shift, and go to state 199


State 186

   75 case_list_def: case_list .
   76              | case_list . default_stmt
   79 case_list: case_list . case

    CASE     shift, and go to state 184
    DEFAULT  shift, and go to state 200

    $default  reduce using rule 75 (case_list_def)

    case          go to state 201
    default_stmt  go to state 202


State 187

   78 case_list: case .

    $default  reduce using rule 78 (case_list)


State 188

   71 arr_element: IDENTIFIER LEFT_SQUARE I_CONSTANT RIGHT_SQUARE LEFT_SQUARE I_CONSTANT . RIGHT_SQUARE

    RIGHT_SQUARE  shift, and go to state 203


State 189

  106 print_params: IDENTIFIER COMMA . print_params

    IDENTIFIER  shift, and go to state 173

    print_params  go to state 204


State 190

  104 print_statement: PRINTF_TOKEN LEFT_ROUND STRING_LITERAL COMMA print_params RIGHT_ROUND . SEMICOLON

    SEMICOLON  shift, and go to state 205


State 191

  110 addr: AMPERSAND IDENTIFIER .

    $default  reduce using rule 110 (addr)


State 192

  107 scanf_statement: SCANF_TOKEN LEFT_ROUND STRING_LITERAL COMMA addr_list RIGHT_ROUND . SEMICOLON

    SEMICOLON  shift, and go to state 206


State 193

  109 addr_list: addr COMMA . addr_list

    AMPERSAND  shift, and go to state 176

    addr_list  go to state 207
    addr       go to state 178


State 194

  101 declarator_arr: IDENTIFIER LEFT_SQUARE expression_statement RIGHT_SQUARE LEFT_SQUARE . expression_statement RIGHT_SQUARE

    IDENTIFIER      shift, and go to state 39
    I_CONSTANT      shift, and go to state 40
    F_CONSTANT      shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    LEFT_ROUND      shift, and go to state 45
    EXCLAMATION     shift, and go to state 46
    HYPHEN          shift, and go to state 47

    expression_statement  go to state 208
    unary_expr            go to state 58
    functional_call       go to state 59
    arr_element           go to state 60
    assignment_statement  go to state 61


State 195

   88 for_loop_assignment: assignment_statement COMMA for_loop_assignment .

    $default  reduce using rule 88 (for_loop_assignment)


State 196

   92 for_statement: FOR LEFT_ROUND for_loop_declaration expr for_loop_assignment RIGHT_ROUND statement_list .

    $default  reduce using rule 92 (for_statement)


State 197

   85 else_clause: ELSE single_statement .

    $default  reduce using rule 85 (else_clause)


State 198

   38 expression_statement: expression_statement . OR_OP expression_statement
   39                     | expression_statement . AND_OP expression_statement
   40                     | expression_statement . GT_OP expression_statement
   41                     | expression_statement . LT_OP expression_statement
   42                     | expression_statement . GE_OP expression_statement
   43                     | expression_statement . LE_OP expression_statement
   44                     | expression_statement . PLUS expression_statement
   45                     | expression_statement . HYPHEN expression_statement
   46                     | expression_statement . STAR expression_statement
   47                     | expression_statement . SLASH expression_statement
   48                     | expression_statement . PERCENT expression_statement
   49                     | expression_statement . EQ_OP expression_statement
   50                     | expression_statement . NE_OP expression_statement
   80 case: CASE expression_statement . COLON statement_list
   81     | CASE expression_statement . COLON

    AND_OP   shift, and go to state 97
    OR_OP    shift, and go to state 98
    LE_OP    shift, and go to state 99
    GE_OP    shift, and go to state 100
    EQ_OP    shift, and go to state 101
    NE_OP    shift, and go to state 102
    COLON    shift, and go to state 209
    HYPHEN   shift, and go to state 104
    PLUS     shift, and go to state 105
    STAR     shift, and go to state 106
    SLASH    shift, and go to state 107
    LT_OP    shift, and go to state 108
    GT_OP    shift, and go to state 109
    PERCENT  shift, and go to state 110


State 199

   74 switch_statment: SWITCH LEFT_ROUND expression_statement RIGHT_ROUND LEFT_CURLY case_list_def RIGHT_CURLY .

    $default  reduce using rule 74 (switch_statment)


State 200

   82 default_stmt: DEFAULT . COLON statement_list
   83             | DEFAULT . COLON

    COLON  shift, and go to state 210


State 201

   79 case_list: case_list case .

    $default  reduce using rule 79 (case_list)


State 202

   76 case_list_def: case_list default_stmt .

    $default  reduce using rule 76 (case_list_def)


State 203

   71 arr_element: IDENTIFIER LEFT_SQUARE I_CONSTANT RIGHT_SQUARE LEFT_SQUARE I_CONSTANT RIGHT_SQUARE .

    $default  reduce using rule 71 (arr_element)


State 204

  106 print_params: IDENTIFIER COMMA print_params .

    $default  reduce using rule 106 (print_params)


State 205

  104 print_statement: PRINTF_TOKEN LEFT_ROUND STRING_LITERAL COMMA print_params RIGHT_ROUND SEMICOLON .

    $default  reduce using rule 104 (print_statement)


State 206

  107 scanf_statement: SCANF_TOKEN LEFT_ROUND STRING_LITERAL COMMA addr_list RIGHT_ROUND SEMICOLON .

    $default  reduce using rule 107 (scanf_statement)


State 207

  109 addr_list: addr COMMA addr_list .

    $default  reduce using rule 109 (addr_list)


State 208

   38 expression_statement: expression_statement . OR_OP expression_statement
   39                     | expression_statement . AND_OP expression_statement
   40                     | expression_statement . GT_OP expression_statement
   41                     | expression_statement . LT_OP expression_statement
   42                     | expression_statement . GE_OP expression_statement
   43                     | expression_statement . LE_OP expression_statement
   44                     | expression_statement . PLUS expression_statement
   45                     | expression_statement . HYPHEN expression_statement
   46                     | expression_statement . STAR expression_statement
   47                     | expression_statement . SLASH expression_statement
   48                     | expression_statement . PERCENT expression_statement
   49                     | expression_statement . EQ_OP expression_statement
   50                     | expression_statement . NE_OP expression_statement
  101 declarator_arr: IDENTIFIER LEFT_SQUARE expression_statement RIGHT_SQUARE LEFT_SQUARE expression_statement . RIGHT_SQUARE

    AND_OP        shift, and go to state 97
    OR_OP         shift, and go to state 98
    LE_OP         shift, and go to state 99
    GE_OP         shift, and go to state 100
    EQ_OP         shift, and go to state 101
    NE_OP         shift, and go to state 102
    RIGHT_SQUARE  shift, and go to state 211
    HYPHEN        shift, and go to state 104
    PLUS          shift, and go to state 105
    STAR          shift, and go to state 106
    SLASH         shift, and go to state 107
    LT_OP         shift, and go to state 108
    GT_OP         shift, and go to state 109
    PERCENT       shift, and go to state 110


State 209

   80 case: CASE expression_statement COLON . statement_list
   81     | CASE expression_statement COLON .

    BREAK           shift, and go to state 32
    CHAR            shift, and go to state 1
    CONTINUE        shift, and go to state 33
    FLOAT           shift, and go to state 2
    FOR             shift, and go to state 34
    IF              shift, and go to state 35
    RETURN          shift, and go to state 36
    INT             shift, and go to state 27
    SWITCH          shift, and go to state 37
    WHILE           shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    I_CONSTANT      shift, and go to state 40
    F_CONSTANT      shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    SEMICOLON       shift, and go to state 43
    LEFT_CURLY      shift, and go to state 22
    LEFT_ROUND      shift, and go to state 45
    EXCLAMATION     shift, and go to state 46
    HYPHEN          shift, and go to state 47
    PRINTF_TOKEN    shift, and go to state 48
    SCANF_TOKEN     shift, and go to state 49

    $default  reduce using rule 81 (case)

    var_type              go to state 50
    compound_statement    go to state 51
    statement_list        go to state 212
    single_statement      go to state 53
    jump_statement        go to state 54
    return_statement      go to state 55
    expr                  go to state 56
    expression_statement  go to state 57
    unary_expr            go to state 58
    functional_call       go to state 59
    arr_element           go to state 60
    assignment_statement  go to state 61
    switch_statment       go to state 62
    if_statement          go to state 63
    for_statement         go to state 64
    declaration           go to state 65
    while_statement       go to state 66
    print_statement       go to state 67
    scanf_statement       go to state 68


State 210

   82 default_stmt: DEFAULT COLON . statement_list
   83             | DEFAULT COLON .

    BREAK           shift, and go to state 32
    CHAR            shift, and go to state 1
    CONTINUE        shift, and go to state 33
    FLOAT           shift, and go to state 2
    FOR             shift, and go to state 34
    IF              shift, and go to state 35
    RETURN          shift, and go to state 36
    INT             shift, and go to state 27
    SWITCH          shift, and go to state 37
    WHILE           shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    I_CONSTANT      shift, and go to state 40
    F_CONSTANT      shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    SEMICOLON       shift, and go to state 43
    LEFT_CURLY      shift, and go to state 22
    LEFT_ROUND      shift, and go to state 45
    EXCLAMATION     shift, and go to state 46
    HYPHEN          shift, and go to state 47
    PRINTF_TOKEN    shift, and go to state 48
    SCANF_TOKEN     shift, and go to state 49

    $default  reduce using rule 83 (default_stmt)

    var_type              go to state 50
    compound_statement    go to state 51
    statement_list        go to state 213
    single_statement      go to state 53
    jump_statement        go to state 54
    return_statement      go to state 55
    expr                  go to state 56
    expression_statement  go to state 57
    unary_expr            go to state 58
    functional_call       go to state 59
    arr_element           go to state 60
    assignment_statement  go to state 61
    switch_statment       go to state 62
    if_statement          go to state 63
    for_statement         go to state 64
    declaration           go to state 65
    while_statement       go to state 66
    print_statement       go to state 67
    scanf_statement       go to state 68


State 211

  101 declarator_arr: IDENTIFIER LEFT_SQUARE expression_statement RIGHT_SQUARE LEFT_SQUARE expression_statement RIGHT_SQUARE .

    $default  reduce using rule 101 (declarator_arr)


State 212

   80 case: CASE expression_statement COLON statement_list .

    $default  reduce using rule 80 (case)


State 213

   82 default_stmt: DEFAULT COLON statement_list .

    $default  reduce using rule 82 (default_stmt)
